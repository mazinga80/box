<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:jee="http://www.springframework.org/schema/jee"
    xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">
	
	<!-- 패턴 추가 가능함.. login.wiz는 인증관련없이 보여줌.. -->
	<http pattern="/login.wiz" security="none"></http>
	<http auto-config="true" access-denied-page="/login.wiz?denied=true">
	<!-- access-denied-page 인증을 통과 했지만 해당 요청에 맞는 권한이 없는 경우 보내지는 페이지 경로를 설정한다.  -->
		<intercept-url pattern="/*" access="ROLE_USER" /> 
		<form-login login-page="/login.wiz" 
						authentication-success-handler-ref="loginSuccessHandler"
	   					authentication-failure-handler-ref="loginFailureHandler"/>
		<logout logout-success-url="/login.wiz" />  
	</http>
	
	<beans:bean id="loginSuccessHandler" class="com.spring.wizwid.common.common.LoginSuccessHandler"/>
	<beans:bean id="loginFailureHandler" class="com.spring.wizwid.common.common.LoginFailureHandler"/>
	<beans:bean id="customUserDetailsService" class="com.spring.wizwid.common.common.CustomUserDetailsService"/>
	<beans:bean id="customAuthenticationProvider" class="com.spring.wizwid.common.common.CustomAuthenticationProvider" />
	
	<beans:bean id="encoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder"/>
	<authentication-manager alias="authenticationManager">  
		<authentication-provider ref="customAuthenticationProvider" />
		<!-- 
		<authentication-provider user-service-ref="customUserDetailsService">
			<password-encoder ref="encoder" />     
		</authentication-provider>
		-->
	</authentication-manager>
	  
</beans:beans>
